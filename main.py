from unittest import result
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support import expected_conditions as EC
from time import sleep

from msvcrt import getche, getch
import os

chrome_options = Options()
chrome_options.headless = True

# Deprecated Version:-
# driver = webdriver.Chrome("C:/ProgramData/chocolatey/lib/chromedriver/tools/chromedriver.exe", options=chrome_options)
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)


print("Seed String: ", end="")
kws = "+".join(input().split())
url = "https://www.google.com/search?q=%22{}%22".format(kws)

driver.get(url)

delay = 10 # seconds
try:
    myElem = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.ID, 'rso')))
    print ("Page is ready!")
except TimeoutException:
    print ("Loading took too much time!")

print("Results Loaded in {}".format(driver.find_element(By.XPATH, value="//*[@id=\"result-stats\"]/nobr").text))

# a = []
# for nresults in range(1,5):
#     target = "//*[@id=\"rso\"]/div[{}]/div".format(nresults) #/div/div[2]/div
#     a.append(driver.find_element(By.XPATH, value=target).text)

# a.append(driver.find_element(By.XPATH, value='//*[@id="rso"]/div[2]/div/div[2]/div').text)
# a.append(driver.find_element(By.XPATH, value='//*[@id="rso"]/div[3]/div/div[2]/div').text)
# a.append(driver.find_element(By.XPATH, value='//*[@id="rso"]/div[4]/div/div[2]/div').text)
# a.append(driver.find_element(By.XPATH, value='//*[@id="rso"]/div[5]/div/div[2]/div').text)
# a.append(driver.find_element(By.XPATH, value='//*[@id="rso"]/div[6]/div/div[2]/div').text)
try:
    videsc = driver.find_elements(By.CLASS_NAME, value="Uroaid")
    # description += " Generated by Descriptionatoronicalyzer"
except:
    pass

try:
    description = str(driver.find_element(By.CLASS_NAME, value="kno-rdesc").text)[12:]
    # description += " Generated by Descriptionatoronicalyzer"
except:
    pass

a = driver.find_elements(By.CSS_SELECTOR, value="div.VwiC3b.yXK7lf.MUxGbd.yDYNvb.lyLwlc.lEBKkf")
b = driver.find_elements(By.CSS_SELECTOR, value=".NJo7tc.Z26q7c.uUuwM span:nth-child(2)")

results = []

if videsc:
    results = videsc + a + b
else:
    results = a + b

try:
    if description:
        results.insert(0,description)
except:
    pass



# div.IsZvec > div.VwiC3b.yXK7lf.MUxGbd.yDYNvb.lyLwlc.lEBKkf


print("\n\nFollowing are GPT-3 generated Keywords. Enjoy! ;)\n\n")
i=1
for j in results:
    try:
        print("[{}]>>> {}\n".format(i,j.text))
    except:
        print("[{}]>>> {}\n".format(i,j))
    i+=1


driver.find_element(By.XPATH, value="//*[@id=\"xjs\"]/table/tbody/tr/td[3]/a").click()





print("\n\n\n\n\nNow you are on second page Good luck!!!!!!!!!!!!!\n\n\n\n\n\n\n")






delay = 10 # seconds
try:
    myElem = WebDriverWait(driver, delay).until(EC.presence_of_element_located((By.ID, 'rso')))
    print ("Page is ready!")
except TimeoutException:
    print ("Loading took too much time!")

print("Results Loaded in {}".format(driver.find_element(By.XPATH, value="//*[@id=\"result-stats\"]/nobr").text))

try:
    videsc1 = driver.find_elements(By.CLASS_NAME, value="Uroaid")
    # description += " Generated by Descriptionatoronicalyzer"
except:
    pass

try:
    description1 = str(driver.find_element(By.CLASS_NAME, value="kno-rdesc").text)[12:]
    # description += " Generated by Descriptionatoronicalyzer"
except:
    pass

a1 = driver.find_elements(By.CSS_SELECTOR, value="div.VwiC3b.yXK7lf.MUxGbd.yDYNvb.lyLwlc.lEBKkf")
b1 = driver.find_elements(By.CSS_SELECTOR, value=".NJo7tc.Z26q7c.uUuwM span:nth-child(2)")

results1 = []

if videsc1:
    results1 = videsc1 + a1 + b1
else:
    results1 = a1 + b1

try:
    if description1:
        results1.insert(0,description1)
except:
    pass



# div.IsZvec > div.VwiC3b.yXK7lf.MUxGbd.yDYNvb.lyLwlc.lEBKkf


print("\n\nFollowing are GPT-3 generated Keywords. Enjoy! ;)\n\n")
i=1
for j1 in results1:
    try:
        print("[{}]>>> {}\n".format(i,j1.text))
    except:
        print("[{}]>>> {}\n".format(i,j1))
    i+=1


driver.quit()